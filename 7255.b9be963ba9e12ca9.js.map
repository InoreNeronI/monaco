{"version":3,"file":"7255.b9be963ba9e12ca9.js","mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__publicField","obj","value","__defNormalProp","configurable","writable","monaco_editor_core_exports","monaco_editor_core_star","WorkerManager","constructor","_modeId","_defaults","this","_worker","_client","_configChangeListener","onDidChange","_stopWorker","_updateExtraLibsToken","_extraLibsChangeListener","onDidExtraLibsChange","_updateExtraLibs","dispose","_this","_asyncToGenerator","myToken","proxy","getProxy","updateExtraLibs","getExtraLibs","_getClient","_this2","editor","createWebWorker","moduleId","label","keepIdleModels","createData","compilerOptions","getCompilerOptions","extraLibs","customWorkerPath","workerOptions","inlayHintsOptions","getEagerModelSync","withSyncedResources","getModels","filter","model","getLanguageId","map","uri","getLanguageServiceWorker","resources","_this3","client","libFileSet","flattenDiagnosticMessageText","diag","newLine","indent","result","i","messageText","next","kid","displayPartsToString","displayParts","displayPart","text","join","Adapter","_textSpanToRange","span","p1","getPositionAt","start","p2","length","lineNumber","startLineNumber","column","startColumn","endLineNumber","endColumn","LibFiles","_libFiles","_hasFetchedLibFiles","_fetchLibFilesPromise","isLibFile","path","indexOf","slice","getOrCreateModel","fileName","Uri","parse","getModel","createModel","matchedLibFile","typescriptDefaults","content","_containsLibFile","uris","fetchLibFilesIfNecessary","_this4","_fetchLibFiles","then","w","getLibFiles","libFiles","DiagnosticsAdapter","_selector","worker","super","onModelAdd","maybeValidate","onlyVisible","getDiagnosticsOptions","isAttachedToEditor","_doValidate","handle","changeSubscription","onDidChangeContent","clearTimeout","window","setTimeout","visibleSubscription","onDidChangeAttached","setModelMarkers","_listener","toString","onModelRemoved","_disposables","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","recomputeDiagostics","forEach","create","d","_this5","isDisposed","promises","noSyntaxValidation","noSemanticValidation","noSuggestionDiagnostics","getSyntacticDiagnostics","getSemanticDiagnostics","getSuggestionDiagnostics","allDiagnostics","Promise","all","diagnostics","reduce","p","c","concat","diagnosticCodesToIgnore","code","relatedUris","relatedInformation","file","_convertDiagnostics","diagStart","diagLength","tags","reportsUnnecessary","MarkerTag","Unnecessary","reportsDeprecated","Deprecated","severity","_tsDiagnosticCategoryToMarkerSeverity","category","message","_convertRelatedInformation","info","relatedResource","infoStart","infoLength","resource","MarkerSeverity","Error","Info","Warning","Hint","SuggestAdapter","triggerCharacters","provideCompletionItems","position","_context","token","_this6","wordInfo","getWordUntilPosition","wordRange","Range","offset","getOffsetAt","getCompletionsAtPosition","suggestions","entries","entry","range","replacementSpan","kindModifiers","languages","CompletionItemTag","name","insertText","sortText","kind","convertKind","resolveCompletionItem","item","_this7","myItem","details","getCompletionEntryDetails","detail","documentation","createDocumentationString","Kind","primitiveType","keyword","CompletionItemKind","Keyword","variable","localVariable","Variable","memberVariable","memberGetAccessor","memberSetAccessor","Field","function","memberFunction","constructSignature","callSignature","indexSignature","Function","enum","Enum","module","Module","class","Class","interface","Interface","warning","File","Property","documentationString","tag","tagToString","tagLabel","paramName","rest","r","Array","isArray","SignatureHelpAdapter","signatureHelpTriggerCharacters","_toSignatureHelpTriggerReason","context","triggerKind","SignatureHelpTriggerKind","TriggerCharacter","triggerCharacter","isRetrigger","ContentChange","provideSignatureHelp","_this8","getSignatureHelpItems","triggerReason","ret","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","items","signature","parameters","prefixDisplayParts","a","parameter","separatorDisplayParts","suffixDisplayParts","QuickInfoAdapter","provideHover","_this9","getQuickInfoAtPosition","contents","textSpan","DocumentHighlightAdapter","provideDocumentHighlights","_this10","getDocumentHighlights","flatMap","highlightSpans","DocumentHighlightKind","Write","Text","DefinitionAdapter","provideDefinition","_this11","getDefinitionAtPosition","refModel","ReferenceAdapter","provideReferences","_this12","getReferencesAtPosition","OutlineAdapter","provideDocumentSymbols","_this13","root","getNavigationTree","convert","containerLabel","outlineTypeTable","SymbolKind","spans","selectionRange","children","childItems","child","containerName","Method","const","localFunction","javaScriptWorker","typeScriptWorker","FormatHelper","_convertOptions","options","ConvertTabsToSpaces","insertSpaces","TabSize","tabSize","IndentSize","IndentStyle","NewLineCharacter","InsertSpaceAfterCommaDelimiter","InsertSpaceAfterSemicolonInForStatements","InsertSpaceBeforeAndAfterBinaryOperators","InsertSpaceAfterKeywordsInControlFlowStatements","InsertSpaceAfterFunctionKeywordForAnonymousFunctions","InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","PlaceOpenBraceOnNewLineForControlBlocks","PlaceOpenBraceOnNewLineForFunctions","_convertTextChanges","change","newText","FormatAdapter","canFormatMultipleRanges","provideDocumentRangeFormattingEdits","_this14","startOffset","endOffset","edits","getFormattingEditsForRange","edit","FormatOnTypeAdapter","autoFormatTriggerCharacters","provideOnTypeFormattingEdits","ch","_this15","getFormattingEditsAfterKeystroke","CodeActionAdaptor","provideCodeActions","_this16","end","formatOptions","getOptions","errorCodes","markers","m","Number","codeFixes","getCodeFixesAtPosition","actions","fix","changes","isNewFile","_tsCodeFixActionToMonacoCodeAction","codeFix","textChange","textChanges","versionId","textEdit","title","description","RenameAdapter","provideRenameEdits","newName","_this17","renameInfo","getRenameInfo","allowRenameOfImportPath","canRename","rejectReason","localizedErrorMessage","fileToRename","renameLocations","findRenameLocations","renameLocation","model2","InlayHintsAdapter","provideInlayHints","_this18","hints","hint","_convertHintKind","InlayHintKind","Parameter","Type","setupTypeScript","defaults","setupMode","setupJavaScript","getJavaScriptWorker","resolve","reject","getTypeScriptWorker","modeId","disposables","providers","registerProviders","modeConfiguration","disposeAll","completionItems","registerCompletionItemProvider","signatureHelp","registerSignatureHelpProvider","hovers","registerHoverProvider","documentHighlights","registerDocumentHighlightProvider","definitions","registerDefinitionProvider","references","registerReferenceProvider","documentSymbols","registerDocumentSymbolProvider","rename","registerRenameProvider","documentRangeFormattingEdits","registerDocumentRangeFormattingEditProvider","onTypeFormattingEdits","registerOnTypeFormattingEditProvider","codeActions","registerCodeActionProvider","inlayHints","registerInlayHintsProvider","asDisposable","pop"],"sourceRoot":"webpack:///","sources":["./node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/typescript/workerManager.ts\nvar WorkerManager = class {\n  constructor(_modeId, _defaults) {\n    this._modeId = _modeId;\n    this._defaults = _defaults;\n    this._worker = null;\n    this._client = null;\n    this._configChangeListener = this._defaults.onDidChange(() => this._stopWorker());\n    this._updateExtraLibsToken = 0;\n    this._extraLibsChangeListener = this._defaults.onDidExtraLibsChange(() => this._updateExtraLibs());\n  }\n  _configChangeListener;\n  _updateExtraLibsToken;\n  _extraLibsChangeListener;\n  _worker;\n  _client;\n  dispose() {\n    this._configChangeListener.dispose();\n    this._extraLibsChangeListener.dispose();\n    this._stopWorker();\n  }\n  _stopWorker() {\n    if (this._worker) {\n      this._worker.dispose();\n      this._worker = null;\n    }\n    this._client = null;\n  }\n  async _updateExtraLibs() {\n    if (!this._worker) {\n      return;\n    }\n    const myToken = ++this._updateExtraLibsToken;\n    const proxy = await this._worker.getProxy();\n    if (this._updateExtraLibsToken !== myToken) {\n      return;\n    }\n    proxy.updateExtraLibs(this._defaults.getExtraLibs());\n  }\n  _getClient() {\n    if (!this._client) {\n      this._client = (async () => {\n        this._worker = monaco_editor_core_exports.editor.createWebWorker({\n          moduleId: \"vs/language/typescript/tsWorker\",\n          label: this._modeId,\n          keepIdleModels: true,\n          createData: {\n            compilerOptions: this._defaults.getCompilerOptions(),\n            extraLibs: this._defaults.getExtraLibs(),\n            customWorkerPath: this._defaults.workerOptions.customWorkerPath,\n            inlayHintsOptions: this._defaults.inlayHintsOptions\n          }\n        });\n        if (this._defaults.getEagerModelSync()) {\n          return await this._worker.withSyncedResources(monaco_editor_core_exports.editor.getModels().filter((model) => model.getLanguageId() === this._modeId).map((model) => model.uri));\n        }\n        return await this._worker.getProxy();\n      })();\n    }\n    return this._client;\n  }\n  async getLanguageServiceWorker(...resources) {\n    const client = await this._getClient();\n    if (this._worker) {\n      await this._worker.withSyncedResources(resources);\n    }\n    return client;\n  }\n};\n\n// src/language/typescript/languageFeatures.ts\nimport {\n  typescriptDefaults\n} from \"./monaco.contribution.js\";\n\n// src/language/typescript/lib/lib.index.ts\nvar libFileSet = {};\nlibFileSet[\"lib.d.ts\"] = true;\nlibFileSet[\"lib.decorators.d.ts\"] = true;\nlibFileSet[\"lib.decorators.legacy.d.ts\"] = true;\nlibFileSet[\"lib.dom.d.ts\"] = true;\nlibFileSet[\"lib.dom.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.collection.d.ts\"] = true;\nlibFileSet[\"lib.es2015.core.d.ts\"] = true;\nlibFileSet[\"lib.es2015.d.ts\"] = true;\nlibFileSet[\"lib.es2015.generator.d.ts\"] = true;\nlibFileSet[\"lib.es2015.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2015.proxy.d.ts\"] = true;\nlibFileSet[\"lib.es2015.reflect.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2016.array.include.d.ts\"] = true;\nlibFileSet[\"lib.es2016.d.ts\"] = true;\nlibFileSet[\"lib.es2016.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.d.ts\"] = true;\nlibFileSet[\"lib.es2017.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2017.object.d.ts\"] = true;\nlibFileSet[\"lib.es2017.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2017.string.d.ts\"] = true;\nlibFileSet[\"lib.es2017.typedarrays.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asyncgenerator.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.es2018.d.ts\"] = true;\nlibFileSet[\"lib.es2018.full.d.ts\"] = true;\nlibFileSet[\"lib.es2018.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2018.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2018.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2019.array.d.ts\"] = true;\nlibFileSet[\"lib.es2019.d.ts\"] = true;\nlibFileSet[\"lib.es2019.full.d.ts\"] = true;\nlibFileSet[\"lib.es2019.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2019.object.d.ts\"] = true;\nlibFileSet[\"lib.es2019.string.d.ts\"] = true;\nlibFileSet[\"lib.es2019.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2020.bigint.d.ts\"] = true;\nlibFileSet[\"lib.es2020.d.ts\"] = true;\nlibFileSet[\"lib.es2020.date.d.ts\"] = true;\nlibFileSet[\"lib.es2020.full.d.ts\"] = true;\nlibFileSet[\"lib.es2020.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2020.number.d.ts\"] = true;\nlibFileSet[\"lib.es2020.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2020.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2020.string.d.ts\"] = true;\nlibFileSet[\"lib.es2020.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2021.d.ts\"] = true;\nlibFileSet[\"lib.es2021.full.d.ts\"] = true;\nlibFileSet[\"lib.es2021.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2021.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2021.string.d.ts\"] = true;\nlibFileSet[\"lib.es2021.weakref.d.ts\"] = true;\nlibFileSet[\"lib.es2022.array.d.ts\"] = true;\nlibFileSet[\"lib.es2022.d.ts\"] = true;\nlibFileSet[\"lib.es2022.error.d.ts\"] = true;\nlibFileSet[\"lib.es2022.full.d.ts\"] = true;\nlibFileSet[\"lib.es2022.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2022.object.d.ts\"] = true;\nlibFileSet[\"lib.es2022.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2022.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2022.string.d.ts\"] = true;\nlibFileSet[\"lib.es2023.array.d.ts\"] = true;\nlibFileSet[\"lib.es2023.d.ts\"] = true;\nlibFileSet[\"lib.es2023.full.d.ts\"] = true;\nlibFileSet[\"lib.es5.d.ts\"] = true;\nlibFileSet[\"lib.es6.d.ts\"] = true;\nlibFileSet[\"lib.esnext.d.ts\"] = true;\nlibFileSet[\"lib.esnext.full.d.ts\"] = true;\nlibFileSet[\"lib.esnext.intl.d.ts\"] = true;\nlibFileSet[\"lib.scripthost.d.ts\"] = true;\nlibFileSet[\"lib.webworker.d.ts\"] = true;\nlibFileSet[\"lib.webworker.importscripts.d.ts\"] = true;\nlibFileSet[\"lib.webworker.iterable.d.ts\"] = true;\n\n// src/language/typescript/languageFeatures.ts\nfunction flattenDiagnosticMessageText(diag, newLine, indent = 0) {\n  if (typeof diag === \"string\") {\n    return diag;\n  } else if (diag === void 0) {\n    return \"\";\n  }\n  let result = \"\";\n  if (indent) {\n    result += newLine;\n    for (let i = 0; i < indent; i++) {\n      result += \"  \";\n    }\n  }\n  result += diag.messageText;\n  indent++;\n  if (diag.next) {\n    for (const kid of diag.next) {\n      result += flattenDiagnosticMessageText(kid, newLine, indent);\n    }\n  }\n  return result;\n}\nfunction displayPartsToString(displayParts) {\n  if (displayParts) {\n    return displayParts.map((displayPart) => displayPart.text).join(\"\");\n  }\n  return \"\";\n}\nvar Adapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n  _textSpanToRange(model, span) {\n    let p1 = model.getPositionAt(span.start);\n    let p2 = model.getPositionAt(span.start + span.length);\n    let { lineNumber: startLineNumber, column: startColumn } = p1;\n    let { lineNumber: endLineNumber, column: endColumn } = p2;\n    return { startLineNumber, startColumn, endLineNumber, endColumn };\n  }\n};\nvar LibFiles = class {\n  constructor(_worker) {\n    this._worker = _worker;\n    this._libFiles = {};\n    this._hasFetchedLibFiles = false;\n    this._fetchLibFilesPromise = null;\n  }\n  _libFiles;\n  _hasFetchedLibFiles;\n  _fetchLibFilesPromise;\n  isLibFile(uri) {\n    if (!uri) {\n      return false;\n    }\n    if (uri.path.indexOf(\"/lib.\") === 0) {\n      return !!libFileSet[uri.path.slice(1)];\n    }\n    return false;\n  }\n  getOrCreateModel(fileName) {\n    const uri = monaco_editor_core_exports.Uri.parse(fileName);\n    const model = monaco_editor_core_exports.editor.getModel(uri);\n    if (model) {\n      return model;\n    }\n    if (this.isLibFile(uri) && this._hasFetchedLibFiles) {\n      return monaco_editor_core_exports.editor.createModel(this._libFiles[uri.path.slice(1)], \"typescript\", uri);\n    }\n    const matchedLibFile = typescriptDefaults.getExtraLibs()[fileName];\n    if (matchedLibFile) {\n      return monaco_editor_core_exports.editor.createModel(matchedLibFile.content, \"typescript\", uri);\n    }\n    return null;\n  }\n  _containsLibFile(uris) {\n    for (let uri of uris) {\n      if (this.isLibFile(uri)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async fetchLibFilesIfNecessary(uris) {\n    if (!this._containsLibFile(uris)) {\n      return;\n    }\n    await this._fetchLibFiles();\n  }\n  _fetchLibFiles() {\n    if (!this._fetchLibFilesPromise) {\n      this._fetchLibFilesPromise = this._worker().then((w) => w.getLibFiles()).then((libFiles) => {\n        this._hasFetchedLibFiles = true;\n        this._libFiles = libFiles;\n      });\n    }\n    return this._fetchLibFilesPromise;\n  }\n};\nvar DiagnosticsAdapter = class extends Adapter {\n  constructor(_libFiles, _defaults, _selector, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n    this._defaults = _defaults;\n    this._selector = _selector;\n    const onModelAdd = (model) => {\n      if (model.getLanguageId() !== _selector) {\n        return;\n      }\n      const maybeValidate = () => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            this._doValidate(model);\n          }\n        } else {\n          this._doValidate(model);\n        }\n      };\n      let handle;\n      const changeSubscription = model.onDidChangeContent(() => {\n        clearTimeout(handle);\n        handle = window.setTimeout(maybeValidate, 500);\n      });\n      const visibleSubscription = model.onDidChangeAttached(() => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            maybeValidate();\n          } else {\n            monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n          }\n        }\n      });\n      this._listener[model.uri.toString()] = {\n        dispose() {\n          changeSubscription.dispose();\n          visibleSubscription.dispose();\n          clearTimeout(handle);\n        }\n      };\n      maybeValidate();\n    };\n    const onModelRemoved = (model) => {\n      monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n      const key = model.uri.toString();\n      if (this._listener[key]) {\n        this._listener[key].dispose();\n        delete this._listener[key];\n      }\n    };\n    this._disposables.push(monaco_editor_core_exports.editor.onDidCreateModel((model) => onModelAdd(model)));\n    this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\n    this._disposables.push(monaco_editor_core_exports.editor.onDidChangeModelLanguage((event) => {\n      onModelRemoved(event.model);\n      onModelAdd(event.model);\n    }));\n    this._disposables.push({\n      dispose() {\n        for (const model of monaco_editor_core_exports.editor.getModels()) {\n          onModelRemoved(model);\n        }\n      }\n    });\n    const recomputeDiagostics = () => {\n      for (const model of monaco_editor_core_exports.editor.getModels()) {\n        onModelRemoved(model);\n        onModelAdd(model);\n      }\n    };\n    this._disposables.push(this._defaults.onDidChange(recomputeDiagostics));\n    this._disposables.push(this._defaults.onDidExtraLibsChange(recomputeDiagostics));\n    monaco_editor_core_exports.editor.getModels().forEach((model) => onModelAdd(model));\n  }\n  _disposables = [];\n  _listener = /* @__PURE__ */ Object.create(null);\n  dispose() {\n    this._disposables.forEach((d) => d && d.dispose());\n    this._disposables = [];\n  }\n  async _doValidate(model) {\n    const worker = await this._worker(model.uri);\n    if (model.isDisposed()) {\n      return;\n    }\n    const promises = [];\n    const { noSyntaxValidation, noSemanticValidation, noSuggestionDiagnostics } = this._defaults.getDiagnosticsOptions();\n    if (!noSyntaxValidation) {\n      promises.push(worker.getSyntacticDiagnostics(model.uri.toString()));\n    }\n    if (!noSemanticValidation) {\n      promises.push(worker.getSemanticDiagnostics(model.uri.toString()));\n    }\n    if (!noSuggestionDiagnostics) {\n      promises.push(worker.getSuggestionDiagnostics(model.uri.toString()));\n    }\n    const allDiagnostics = await Promise.all(promises);\n    if (!allDiagnostics || model.isDisposed()) {\n      return;\n    }\n    const diagnostics = allDiagnostics.reduce((p, c) => c.concat(p), []).filter((d) => (this._defaults.getDiagnosticsOptions().diagnosticCodesToIgnore || []).indexOf(d.code) === -1);\n    const relatedUris = diagnostics.map((d) => d.relatedInformation || []).reduce((p, c) => c.concat(p), []).map((relatedInformation) => relatedInformation.file ? monaco_editor_core_exports.Uri.parse(relatedInformation.file.fileName) : null);\n    await this._libFiles.fetchLibFilesIfNecessary(relatedUris);\n    if (model.isDisposed()) {\n      return;\n    }\n    monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, diagnostics.map((d) => this._convertDiagnostics(model, d)));\n  }\n  _convertDiagnostics(model, diag) {\n    const diagStart = diag.start || 0;\n    const diagLength = diag.length || 1;\n    const { lineNumber: startLineNumber, column: startColumn } = model.getPositionAt(diagStart);\n    const { lineNumber: endLineNumber, column: endColumn } = model.getPositionAt(diagStart + diagLength);\n    const tags = [];\n    if (diag.reportsUnnecessary) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Unnecessary);\n    }\n    if (diag.reportsDeprecated) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Deprecated);\n    }\n    return {\n      severity: this._tsDiagnosticCategoryToMarkerSeverity(diag.category),\n      startLineNumber,\n      startColumn,\n      endLineNumber,\n      endColumn,\n      message: flattenDiagnosticMessageText(diag.messageText, \"\\n\"),\n      code: diag.code.toString(),\n      tags,\n      relatedInformation: this._convertRelatedInformation(model, diag.relatedInformation)\n    };\n  }\n  _convertRelatedInformation(model, relatedInformation) {\n    if (!relatedInformation) {\n      return [];\n    }\n    const result = [];\n    relatedInformation.forEach((info) => {\n      let relatedResource = model;\n      if (info.file) {\n        relatedResource = this._libFiles.getOrCreateModel(info.file.fileName);\n      }\n      if (!relatedResource) {\n        return;\n      }\n      const infoStart = info.start || 0;\n      const infoLength = info.length || 1;\n      const { lineNumber: startLineNumber, column: startColumn } = relatedResource.getPositionAt(infoStart);\n      const { lineNumber: endLineNumber, column: endColumn } = relatedResource.getPositionAt(infoStart + infoLength);\n      result.push({\n        resource: relatedResource.uri,\n        startLineNumber,\n        startColumn,\n        endLineNumber,\n        endColumn,\n        message: flattenDiagnosticMessageText(info.messageText, \"\\n\")\n      });\n    });\n    return result;\n  }\n  _tsDiagnosticCategoryToMarkerSeverity(category) {\n    switch (category) {\n      case 1 /* Error */:\n        return monaco_editor_core_exports.MarkerSeverity.Error;\n      case 3 /* Message */:\n        return monaco_editor_core_exports.MarkerSeverity.Info;\n      case 0 /* Warning */:\n        return monaco_editor_core_exports.MarkerSeverity.Warning;\n      case 2 /* Suggestion */:\n        return monaco_editor_core_exports.MarkerSeverity.Hint;\n    }\n    return monaco_editor_core_exports.MarkerSeverity.Info;\n  }\n};\nvar SuggestAdapter = class extends Adapter {\n  get triggerCharacters() {\n    return [\".\"];\n  }\n  async provideCompletionItems(model, position, _context, token) {\n    const wordInfo = model.getWordUntilPosition(position);\n    const wordRange = new monaco_editor_core_exports.Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getCompletionsAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const suggestions = info.entries.map((entry) => {\n      let range = wordRange;\n      if (entry.replacementSpan) {\n        const p1 = model.getPositionAt(entry.replacementSpan.start);\n        const p2 = model.getPositionAt(entry.replacementSpan.start + entry.replacementSpan.length);\n        range = new monaco_editor_core_exports.Range(p1.lineNumber, p1.column, p2.lineNumber, p2.column);\n      }\n      const tags = [];\n      if (entry.kindModifiers !== void 0 && entry.kindModifiers.indexOf(\"deprecated\") !== -1) {\n        tags.push(monaco_editor_core_exports.languages.CompletionItemTag.Deprecated);\n      }\n      return {\n        uri: resource,\n        position,\n        offset,\n        range,\n        label: entry.name,\n        insertText: entry.name,\n        sortText: entry.sortText,\n        kind: SuggestAdapter.convertKind(entry.kind),\n        tags\n      };\n    });\n    return {\n      suggestions\n    };\n  }\n  async resolveCompletionItem(item, token) {\n    const myItem = item;\n    const resource = myItem.uri;\n    const position = myItem.position;\n    const offset = myItem.offset;\n    const worker = await this._worker(resource);\n    const details = await worker.getCompletionEntryDetails(resource.toString(), offset, myItem.label);\n    if (!details) {\n      return myItem;\n    }\n    return {\n      uri: resource,\n      position,\n      label: details.name,\n      kind: SuggestAdapter.convertKind(details.kind),\n      detail: displayPartsToString(details.displayParts),\n      documentation: {\n        value: SuggestAdapter.createDocumentationString(details)\n      }\n    };\n  }\n  static convertKind(kind) {\n    switch (kind) {\n      case Kind.primitiveType:\n      case Kind.keyword:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Keyword;\n      case Kind.variable:\n      case Kind.localVariable:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Variable;\n      case Kind.memberVariable:\n      case Kind.memberGetAccessor:\n      case Kind.memberSetAccessor:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Field;\n      case Kind.function:\n      case Kind.memberFunction:\n      case Kind.constructSignature:\n      case Kind.callSignature:\n      case Kind.indexSignature:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Function;\n      case Kind.enum:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Enum;\n      case Kind.module:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Module;\n      case Kind.class:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Class;\n      case Kind.interface:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Interface;\n      case Kind.warning:\n        return monaco_editor_core_exports.languages.CompletionItemKind.File;\n    }\n    return monaco_editor_core_exports.languages.CompletionItemKind.Property;\n  }\n  static createDocumentationString(details) {\n    let documentationString = displayPartsToString(details.documentation);\n    if (details.tags) {\n      for (const tag of details.tags) {\n        documentationString += `\n\n${tagToString(tag)}`;\n      }\n    }\n    return documentationString;\n  }\n};\nfunction tagToString(tag) {\n  let tagLabel = `*@${tag.name}*`;\n  if (tag.name === \"param\" && tag.text) {\n    const [paramName, ...rest] = tag.text;\n    tagLabel += `\\`${paramName.text}\\``;\n    if (rest.length > 0)\n      tagLabel += ` \\u2014 ${rest.map((r) => r.text).join(\" \")}`;\n  } else if (Array.isArray(tag.text)) {\n    tagLabel += ` \\u2014 ${tag.text.map((r) => r.text).join(\" \")}`;\n  } else if (tag.text) {\n    tagLabel += ` \\u2014 ${tag.text}`;\n  }\n  return tagLabel;\n}\nvar SignatureHelpAdapter = class extends Adapter {\n  signatureHelpTriggerCharacters = [\"(\", \",\"];\n  static _toSignatureHelpTriggerReason(context) {\n    switch (context.triggerKind) {\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.TriggerCharacter:\n        if (context.triggerCharacter) {\n          if (context.isRetrigger) {\n            return { kind: \"retrigger\", triggerCharacter: context.triggerCharacter };\n          } else {\n            return { kind: \"characterTyped\", triggerCharacter: context.triggerCharacter };\n          }\n        } else {\n          return { kind: \"invoked\" };\n        }\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.ContentChange:\n        return context.isRetrigger ? { kind: \"retrigger\" } : { kind: \"invoked\" };\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.Invoke:\n      default:\n        return { kind: \"invoked\" };\n    }\n  }\n  async provideSignatureHelp(model, position, token, context) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getSignatureHelpItems(resource.toString(), offset, {\n      triggerReason: SignatureHelpAdapter._toSignatureHelpTriggerReason(context)\n    });\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const ret = {\n      activeSignature: info.selectedItemIndex,\n      activeParameter: info.argumentIndex,\n      signatures: []\n    };\n    info.items.forEach((item) => {\n      const signature = {\n        label: \"\",\n        parameters: []\n      };\n      signature.documentation = {\n        value: displayPartsToString(item.documentation)\n      };\n      signature.label += displayPartsToString(item.prefixDisplayParts);\n      item.parameters.forEach((p, i, a) => {\n        const label = displayPartsToString(p.displayParts);\n        const parameter = {\n          label,\n          documentation: {\n            value: displayPartsToString(p.documentation)\n          }\n        };\n        signature.label += label;\n        signature.parameters.push(parameter);\n        if (i < a.length - 1) {\n          signature.label += displayPartsToString(item.separatorDisplayParts);\n        }\n      });\n      signature.label += displayPartsToString(item.suffixDisplayParts);\n      ret.signatures.push(signature);\n    });\n    return {\n      value: ret,\n      dispose() {\n      }\n    };\n  }\n};\nvar QuickInfoAdapter = class extends Adapter {\n  async provideHover(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getQuickInfoAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const documentation = displayPartsToString(info.documentation);\n    const tags = info.tags ? info.tags.map((tag) => tagToString(tag)).join(\"  \\n\\n\") : \"\";\n    const contents = displayPartsToString(info.displayParts);\n    return {\n      range: this._textSpanToRange(model, info.textSpan),\n      contents: [\n        {\n          value: \"```typescript\\n\" + contents + \"\\n```\\n\"\n        },\n        {\n          value: documentation + (tags ? \"\\n\\n\" + tags : \"\")\n        }\n      ]\n    };\n  }\n};\nvar DocumentHighlightAdapter = class extends Adapter {\n  async provideDocumentHighlights(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDocumentHighlights(resource.toString(), offset, [\n      resource.toString()\n    ]);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    return entries.flatMap((entry) => {\n      return entry.highlightSpans.map((highlightSpans) => {\n        return {\n          range: this._textSpanToRange(model, highlightSpans.textSpan),\n          kind: highlightSpans.kind === \"writtenReference\" ? monaco_editor_core_exports.languages.DocumentHighlightKind.Write : monaco_editor_core_exports.languages.DocumentHighlightKind.Text\n        };\n      });\n    });\n  }\n};\nvar DefinitionAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideDefinition(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDefinitionAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar ReferenceAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideReferences(model, position, context, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getReferencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar OutlineAdapter = class extends Adapter {\n  async provideDocumentSymbols(model, token) {\n    const resource = model.uri;\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const root = await worker.getNavigationTree(resource.toString());\n    if (!root || model.isDisposed()) {\n      return;\n    }\n    const convert = (item, containerLabel) => {\n      const result2 = {\n        name: item.text,\n        detail: \"\",\n        kind: outlineTypeTable[item.kind] || monaco_editor_core_exports.languages.SymbolKind.Variable,\n        range: this._textSpanToRange(model, item.spans[0]),\n        selectionRange: this._textSpanToRange(model, item.spans[0]),\n        tags: [],\n        children: item.childItems?.map((child) => convert(child, item.text)),\n        containerName: containerLabel\n      };\n      return result2;\n    };\n    const result = root.childItems ? root.childItems.map((item) => convert(item)) : [];\n    return result;\n  }\n};\nvar Kind = class {\n};\n__publicField(Kind, \"unknown\", \"\");\n__publicField(Kind, \"keyword\", \"keyword\");\n__publicField(Kind, \"script\", \"script\");\n__publicField(Kind, \"module\", \"module\");\n__publicField(Kind, \"class\", \"class\");\n__publicField(Kind, \"interface\", \"interface\");\n__publicField(Kind, \"type\", \"type\");\n__publicField(Kind, \"enum\", \"enum\");\n__publicField(Kind, \"variable\", \"var\");\n__publicField(Kind, \"localVariable\", \"local var\");\n__publicField(Kind, \"function\", \"function\");\n__publicField(Kind, \"localFunction\", \"local function\");\n__publicField(Kind, \"memberFunction\", \"method\");\n__publicField(Kind, \"memberGetAccessor\", \"getter\");\n__publicField(Kind, \"memberSetAccessor\", \"setter\");\n__publicField(Kind, \"memberVariable\", \"property\");\n__publicField(Kind, \"constructorImplementation\", \"constructor\");\n__publicField(Kind, \"callSignature\", \"call\");\n__publicField(Kind, \"indexSignature\", \"index\");\n__publicField(Kind, \"constructSignature\", \"construct\");\n__publicField(Kind, \"parameter\", \"parameter\");\n__publicField(Kind, \"typeParameter\", \"type parameter\");\n__publicField(Kind, \"primitiveType\", \"primitive type\");\n__publicField(Kind, \"label\", \"label\");\n__publicField(Kind, \"alias\", \"alias\");\n__publicField(Kind, \"const\", \"const\");\n__publicField(Kind, \"let\", \"let\");\n__publicField(Kind, \"warning\", \"warning\");\nvar outlineTypeTable = /* @__PURE__ */ Object.create(null);\noutlineTypeTable[Kind.module] = monaco_editor_core_exports.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco_editor_core_exports.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco_editor_core_exports.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco_editor_core_exports.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco_editor_core_exports.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco_editor_core_exports.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco_editor_core_exports.languages.SymbolKind.Function;\nvar FormatHelper = class extends Adapter {\n  static _convertOptions(options) {\n    return {\n      ConvertTabsToSpaces: options.insertSpaces,\n      TabSize: options.tabSize,\n      IndentSize: options.tabSize,\n      IndentStyle: 2 /* Smart */,\n      NewLineCharacter: \"\\n\",\n      InsertSpaceAfterCommaDelimiter: true,\n      InsertSpaceAfterSemicolonInForStatements: true,\n      InsertSpaceBeforeAndAfterBinaryOperators: true,\n      InsertSpaceAfterKeywordsInControlFlowStatements: true,\n      InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n      InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n      PlaceOpenBraceOnNewLineForControlBlocks: false,\n      PlaceOpenBraceOnNewLineForFunctions: false\n    };\n  }\n  _convertTextChanges(model, change) {\n    return {\n      text: change.newText,\n      range: this._textSpanToRange(model, change.span)\n    };\n  }\n};\nvar FormatAdapter = class extends FormatHelper {\n  canFormatMultipleRanges = false;\n  async provideDocumentRangeFormattingEdits(model, range, options, token) {\n    const resource = model.uri;\n    const startOffset = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const endOffset = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsForRange(resource.toString(), startOffset, endOffset, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar FormatOnTypeAdapter = class extends FormatHelper {\n  get autoFormatTriggerCharacters() {\n    return [\";\", \"}\", \"\\n\"];\n  }\n  async provideOnTypeFormattingEdits(model, position, ch, options, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsAfterKeystroke(resource.toString(), offset, ch, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar CodeActionAdaptor = class extends FormatHelper {\n  async provideCodeActions(model, range, context, token) {\n    const resource = model.uri;\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const formatOptions = FormatHelper._convertOptions(model.getOptions());\n    const errorCodes = context.markers.filter((m) => m.code).map((m) => m.code).map(Number);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const codeFixes = await worker.getCodeFixesAtPosition(resource.toString(), start, end, errorCodes, formatOptions);\n    if (!codeFixes || model.isDisposed()) {\n      return { actions: [], dispose: () => {\n      } };\n    }\n    const actions = codeFixes.filter((fix) => {\n      return fix.changes.filter((change) => change.isNewFile).length === 0;\n    }).map((fix) => {\n      return this._tsCodeFixActionToMonacoCodeAction(model, context, fix);\n    });\n    return {\n      actions,\n      dispose: () => {\n      }\n    };\n  }\n  _tsCodeFixActionToMonacoCodeAction(model, context, codeFix) {\n    const edits = [];\n    for (const change of codeFix.changes) {\n      for (const textChange of change.textChanges) {\n        edits.push({\n          resource: model.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model, textChange.span),\n            text: textChange.newText\n          }\n        });\n      }\n    }\n    const action = {\n      title: codeFix.description,\n      edit: { edits },\n      diagnostics: context.markers,\n      kind: \"quickfix\"\n    };\n    return action;\n  }\n};\nvar RenameAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideRenameEdits(model, position, newName, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const renameInfo = await worker.getRenameInfo(fileName, offset, {\n      allowRenameOfImportPath: false\n    });\n    if (renameInfo.canRename === false) {\n      return {\n        edits: [],\n        rejectReason: renameInfo.localizedErrorMessage\n      };\n    }\n    if (renameInfo.fileToRename !== void 0) {\n      throw new Error(\"Renaming files is not supported.\");\n    }\n    const renameLocations = await worker.findRenameLocations(fileName, offset, false, false, false);\n    if (!renameLocations || model.isDisposed()) {\n      return;\n    }\n    const edits = [];\n    for (const renameLocation of renameLocations) {\n      const model2 = this._libFiles.getOrCreateModel(renameLocation.fileName);\n      if (model2) {\n        edits.push({\n          resource: model2.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model2, renameLocation.textSpan),\n            text: newName\n          }\n        });\n      } else {\n        throw new Error(`Unknown file ${renameLocation.fileName}.`);\n      }\n    }\n    return { edits };\n  }\n};\nvar InlayHintsAdapter = class extends Adapter {\n  async provideInlayHints(model, range, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return null;\n    }\n    const tsHints = await worker.provideInlayHints(fileName, start, end);\n    const hints = tsHints.map((hint) => {\n      return {\n        ...hint,\n        label: hint.text,\n        position: model.getPositionAt(hint.position),\n        kind: this._convertHintKind(hint.kind)\n      };\n    });\n    return { hints, dispose: () => {\n    } };\n  }\n  _convertHintKind(kind) {\n    switch (kind) {\n      case \"Parameter\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Parameter;\n      case \"Type\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n      default:\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n    }\n  }\n};\n\n// src/language/typescript/tsMode.ts\nvar javaScriptWorker;\nvar typeScriptWorker;\nfunction setupTypeScript(defaults) {\n  typeScriptWorker = setupMode(defaults, \"typescript\");\n}\nfunction setupJavaScript(defaults) {\n  javaScriptWorker = setupMode(defaults, \"javascript\");\n}\nfunction getJavaScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!javaScriptWorker) {\n      return reject(\"JavaScript not registered!\");\n    }\n    resolve(javaScriptWorker);\n  });\n}\nfunction getTypeScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!typeScriptWorker) {\n      return reject(\"TypeScript not registered!\");\n    }\n    resolve(typeScriptWorker);\n  });\n}\nfunction setupMode(defaults, modeId) {\n  const disposables = [];\n  const providers = [];\n  const client = new WorkerManager(modeId, defaults);\n  disposables.push(client);\n  const worker = (...uris) => {\n    return client.getLanguageServiceWorker(...uris);\n  };\n  const libFiles = new LibFiles(worker);\n  function registerProviders() {\n    const { modeConfiguration } = defaults;\n    disposeAll(providers);\n    if (modeConfiguration.completionItems) {\n      providers.push(monaco_editor_core_exports.languages.registerCompletionItemProvider(modeId, new SuggestAdapter(worker)));\n    }\n    if (modeConfiguration.signatureHelp) {\n      providers.push(monaco_editor_core_exports.languages.registerSignatureHelpProvider(modeId, new SignatureHelpAdapter(worker)));\n    }\n    if (modeConfiguration.hovers) {\n      providers.push(monaco_editor_core_exports.languages.registerHoverProvider(modeId, new QuickInfoAdapter(worker)));\n    }\n    if (modeConfiguration.documentHighlights) {\n      providers.push(monaco_editor_core_exports.languages.registerDocumentHighlightProvider(modeId, new DocumentHighlightAdapter(worker)));\n    }\n    if (modeConfiguration.definitions) {\n      providers.push(monaco_editor_core_exports.languages.registerDefinitionProvider(modeId, new DefinitionAdapter(libFiles, worker)));\n    }\n    if (modeConfiguration.references) {\n      providers.push(monaco_editor_core_exports.languages.registerReferenceProvider(modeId, new ReferenceAdapter(libFiles, worker)));\n    }\n    if (modeConfiguration.documentSymbols) {\n      providers.push(monaco_editor_core_exports.languages.registerDocumentSymbolProvider(modeId, new OutlineAdapter(worker)));\n    }\n    if (modeConfiguration.rename) {\n      providers.push(monaco_editor_core_exports.languages.registerRenameProvider(modeId, new RenameAdapter(libFiles, worker)));\n    }\n    if (modeConfiguration.documentRangeFormattingEdits) {\n      providers.push(monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(modeId, new FormatAdapter(worker)));\n    }\n    if (modeConfiguration.onTypeFormattingEdits) {\n      providers.push(monaco_editor_core_exports.languages.registerOnTypeFormattingEditProvider(modeId, new FormatOnTypeAdapter(worker)));\n    }\n    if (modeConfiguration.codeActions) {\n      providers.push(monaco_editor_core_exports.languages.registerCodeActionProvider(modeId, new CodeActionAdaptor(worker)));\n    }\n    if (modeConfiguration.inlayHints) {\n      providers.push(monaco_editor_core_exports.languages.registerInlayHintsProvider(modeId, new InlayHintsAdapter(worker)));\n    }\n    if (modeConfiguration.diagnostics) {\n      providers.push(new DiagnosticsAdapter(libFiles, defaults, modeId, worker));\n    }\n  }\n  registerProviders();\n  disposables.push(asDisposable(providers));\n  return worker;\n}\nfunction asDisposable(disposables) {\n  return { dispose: () => disposeAll(disposables) };\n}\nfunction disposeAll(disposables) {\n  while (disposables.length) {\n    disposables.pop().dispose();\n  }\n}\nexport {\n  Adapter,\n  CodeActionAdaptor,\n  DefinitionAdapter,\n  DiagnosticsAdapter,\n  DocumentHighlightAdapter,\n  FormatAdapter,\n  FormatHelper,\n  FormatOnTypeAdapter,\n  InlayHintsAdapter,\n  Kind,\n  LibFiles,\n  OutlineAdapter,\n  QuickInfoAdapter,\n  ReferenceAdapter,\n  RenameAdapter,\n  SignatureHelpAdapter,\n  SuggestAdapter,\n  WorkerManager,\n  flattenDiagnosticMessageText,\n  getJavaScriptWorker,\n  getTypeScriptWorker,\n  setupJavaScript,\n  setupTypeScript\n};\n"],"x_google_ignoreList":[0]}