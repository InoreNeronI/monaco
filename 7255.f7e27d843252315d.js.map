{"version":3,"file":"7255.f7e27d843252315d.js","mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","monaco_editor_core_exports","monaco_editor_core_star","WorkerManager","constructor","_modeId","_defaults","this","_worker","_client","_configChangeListener","onDidChange","_stopWorker","_updateExtraLibsToken","_extraLibsChangeListener","onDidExtraLibsChange","_updateExtraLibs","dispose","_this","_asyncToGenerator","myToken","proxy","getProxy","updateExtraLibs","getExtraLibs","_getClient","_this2","editor","createWebWorker","moduleId","label","keepIdleModels","createData","compilerOptions","getCompilerOptions","extraLibs","customWorkerPath","workerOptions","inlayHintsOptions","getEagerModelSync","withSyncedResources","getModels","filter","model","getLanguageId","map","uri","getLanguageServiceWorker","resources","_this3","client","libFileSet","flattenDiagnosticMessageText","diag","newLine","indent","result","i","messageText","next","kid","displayPartsToString","displayParts","displayPart","text","join","Adapter","_textSpanToRange","span","p1","getPositionAt","start","p2","length","lineNumber","startLineNumber","column","startColumn","endLineNumber","endColumn","LibFiles","_libFiles","_hasFetchedLibFiles","_fetchLibFilesPromise","isLibFile","path","indexOf","slice","getOrCreateModel","fileName","Uri","parse","getModel","createModel","matchedLibFile","typescriptDefaults","content","_containsLibFile","uris","fetchLibFilesIfNecessary","_this4","_fetchLibFiles","then","w","getLibFiles","libFiles","DiagnosticsAdapter","_selector","worker","super","_disposables","_listener","create","onModelAdd","maybeValidate","onlyVisible","getDiagnosticsOptions","isAttachedToEditor","_doValidate","handle","changeSubscription","onDidChangeContent","clearTimeout","window","setTimeout","visibleSubscription","onDidChangeAttached","setModelMarkers","toString","onModelRemoved","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","recomputeDiagostics","forEach","d","_this5","isDisposed","promises","noSyntaxValidation","noSemanticValidation","noSuggestionDiagnostics","getSyntacticDiagnostics","getSemanticDiagnostics","getSuggestionDiagnostics","allDiagnostics","Promise","all","diagnostics","reduce","p","c","concat","diagnosticCodesToIgnore","code","relatedUris","relatedInformation","file","_convertDiagnostics","diagStart","diagLength","tags","reportsUnnecessary","MarkerTag","Unnecessary","reportsDeprecated","Deprecated","severity","_tsDiagnosticCategoryToMarkerSeverity","category","message","_convertRelatedInformation","info","relatedResource","infoStart","infoLength","resource","MarkerSeverity","Error","Info","Warning","Hint","SuggestAdapter","_SuggestAdapter","triggerCharacters","provideCompletionItems","position","_context","token","_this6","wordInfo","getWordUntilPosition","wordRange","Range","offset","getOffsetAt","getCompletionsAtPosition","suggestions","entries","entry","range","replacementSpan","kindModifiers","languages","CompletionItemTag","name","insertText","sortText","kind","convertKind","resolveCompletionItem","item","_this7","myItem","details","getCompletionEntryDetails","detail","documentation","value","createDocumentationString","Kind","primitiveType","keyword","CompletionItemKind","Keyword","variable","localVariable","Variable","memberVariable","memberGetAccessor","memberSetAccessor","Field","function","memberFunction","constructSignature","callSignature","indexSignature","Function","enum","Enum","module","Module","class","Class","interface","Interface","warning","File","Property","documentationString","tag","tagToString","tagLabel","paramName","rest","r","Array","isArray","SignatureHelpAdapter","_SignatureHelpAdapter","arguments","signatureHelpTriggerCharacters","_toSignatureHelpTriggerReason","context","triggerKind","SignatureHelpTriggerKind","TriggerCharacter","triggerCharacter","isRetrigger","ContentChange","provideSignatureHelp","_this8","getSignatureHelpItems","triggerReason","ret","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","items","signature","parameters","prefixDisplayParts","a","parameter","separatorDisplayParts","suffixDisplayParts","QuickInfoAdapter","provideHover","_this9","getQuickInfoAtPosition","contents","textSpan","DocumentHighlightAdapter","provideDocumentHighlights","_this10","getDocumentHighlights","flatMap","highlightSpans","DocumentHighlightKind","Write","Text","DefinitionAdapter","provideDefinition","_this11","getDefinitionAtPosition","refModel","ReferenceAdapter","provideReferences","_this12","getReferencesAtPosition","OutlineAdapter","provideDocumentSymbols","_this13","root","getNavigationTree","convert","containerLabel","outlineTypeTable","SymbolKind","spans","selectionRange","children","childItems","child","containerName","static","unknown","script","type","localFunction","constructorImplementation","typeParameter","alias","const","let","Method","javaScriptWorker","typeScriptWorker","FormatHelper","_convertOptions","options","ConvertTabsToSpaces","insertSpaces","TabSize","tabSize","IndentSize","IndentStyle","NewLineCharacter","InsertSpaceAfterCommaDelimiter","InsertSpaceAfterSemicolonInForStatements","InsertSpaceBeforeAndAfterBinaryOperators","InsertSpaceAfterKeywordsInControlFlowStatements","InsertSpaceAfterFunctionKeywordForAnonymousFunctions","InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","PlaceOpenBraceOnNewLineForControlBlocks","PlaceOpenBraceOnNewLineForFunctions","_convertTextChanges","change","newText","FormatAdapter","canFormatMultipleRanges","provideDocumentRangeFormattingEdits","_this14","startOffset","endOffset","edits","getFormattingEditsForRange","edit","FormatOnTypeAdapter","autoFormatTriggerCharacters","provideOnTypeFormattingEdits","ch","_this15","getFormattingEditsAfterKeystroke","CodeActionAdaptor","provideCodeActions","_this16","end","formatOptions","getOptions","errorCodes","markers","m","Number","codeFixes","getCodeFixesAtPosition","actions","fix","changes","isNewFile","_tsCodeFixActionToMonacoCodeAction","codeFix","textChange","textChanges","versionId","textEdit","title","description","RenameAdapter","provideRenameEdits","newName","_this17","renameInfo","getRenameInfo","allowRenameOfImportPath","canRename","rejectReason","localizedErrorMessage","fileToRename","renameLocations","findRenameLocations","renameLocation","model2","InlayHintsAdapter","provideInlayHints","_this18","hints","hint","_convertHintKind","InlayHintKind","Parameter","Type","setupTypeScript","defaults","setupMode","setupJavaScript","getJavaScriptWorker","resolve","reject","getTypeScriptWorker","modeId","disposables","providers","registerProviders","modeConfiguration","disposeAll","completionItems","registerCompletionItemProvider","signatureHelp","registerSignatureHelpProvider","hovers","registerHoverProvider","documentHighlights","registerDocumentHighlightProvider","definitions","registerDefinitionProvider","references","registerReferenceProvider","documentSymbols","registerDocumentSymbolProvider","rename","registerRenameProvider","documentRangeFormattingEdits","registerDocumentRangeFormattingEditProvider","onTypeFormattingEdits","registerOnTypeFormattingEditProvider","codeActions","registerCodeActionProvider","inlayHints","registerInlayHintsProvider","asDisposable","pop"],"sourceRoot":"webpack:///","sources":["./node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.46.0(21007360cad28648bdf46282a2592cb47c3a7a6f)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/typescript/workerManager.ts\nvar WorkerManager = class {\n  constructor(_modeId, _defaults) {\n    this._modeId = _modeId;\n    this._defaults = _defaults;\n    this._worker = null;\n    this._client = null;\n    this._configChangeListener = this._defaults.onDidChange(() => this._stopWorker());\n    this._updateExtraLibsToken = 0;\n    this._extraLibsChangeListener = this._defaults.onDidExtraLibsChange(\n      () => this._updateExtraLibs()\n    );\n  }\n  dispose() {\n    this._configChangeListener.dispose();\n    this._extraLibsChangeListener.dispose();\n    this._stopWorker();\n  }\n  _stopWorker() {\n    if (this._worker) {\n      this._worker.dispose();\n      this._worker = null;\n    }\n    this._client = null;\n  }\n  async _updateExtraLibs() {\n    if (!this._worker) {\n      return;\n    }\n    const myToken = ++this._updateExtraLibsToken;\n    const proxy = await this._worker.getProxy();\n    if (this._updateExtraLibsToken !== myToken) {\n      return;\n    }\n    proxy.updateExtraLibs(this._defaults.getExtraLibs());\n  }\n  _getClient() {\n    if (!this._client) {\n      this._client = (async () => {\n        this._worker = monaco_editor_core_exports.editor.createWebWorker({\n          // module that exports the create() method and returns a `TypeScriptWorker` instance\n          moduleId: \"vs/language/typescript/tsWorker\",\n          label: this._modeId,\n          keepIdleModels: true,\n          // passed in to the create() method\n          createData: {\n            compilerOptions: this._defaults.getCompilerOptions(),\n            extraLibs: this._defaults.getExtraLibs(),\n            customWorkerPath: this._defaults.workerOptions.customWorkerPath,\n            inlayHintsOptions: this._defaults.inlayHintsOptions\n          }\n        });\n        if (this._defaults.getEagerModelSync()) {\n          return await this._worker.withSyncedResources(\n            monaco_editor_core_exports.editor.getModels().filter((model) => model.getLanguageId() === this._modeId).map((model) => model.uri)\n          );\n        }\n        return await this._worker.getProxy();\n      })();\n    }\n    return this._client;\n  }\n  async getLanguageServiceWorker(...resources) {\n    const client = await this._getClient();\n    if (this._worker) {\n      await this._worker.withSyncedResources(resources);\n    }\n    return client;\n  }\n};\n\n// src/language/typescript/languageFeatures.ts\nimport {\n  typescriptDefaults\n} from \"./monaco.contribution.js\";\n\n// src/language/typescript/lib/lib.index.ts\nvar libFileSet = {};\nlibFileSet[\"lib.d.ts\"] = true;\nlibFileSet[\"lib.decorators.d.ts\"] = true;\nlibFileSet[\"lib.decorators.legacy.d.ts\"] = true;\nlibFileSet[\"lib.dom.d.ts\"] = true;\nlibFileSet[\"lib.dom.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.collection.d.ts\"] = true;\nlibFileSet[\"lib.es2015.core.d.ts\"] = true;\nlibFileSet[\"lib.es2015.d.ts\"] = true;\nlibFileSet[\"lib.es2015.generator.d.ts\"] = true;\nlibFileSet[\"lib.es2015.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2015.proxy.d.ts\"] = true;\nlibFileSet[\"lib.es2015.reflect.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2016.array.include.d.ts\"] = true;\nlibFileSet[\"lib.es2016.d.ts\"] = true;\nlibFileSet[\"lib.es2016.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.d.ts\"] = true;\nlibFileSet[\"lib.es2017.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2017.object.d.ts\"] = true;\nlibFileSet[\"lib.es2017.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2017.string.d.ts\"] = true;\nlibFileSet[\"lib.es2017.typedarrays.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asyncgenerator.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.es2018.d.ts\"] = true;\nlibFileSet[\"lib.es2018.full.d.ts\"] = true;\nlibFileSet[\"lib.es2018.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2018.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2018.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2019.array.d.ts\"] = true;\nlibFileSet[\"lib.es2019.d.ts\"] = true;\nlibFileSet[\"lib.es2019.full.d.ts\"] = true;\nlibFileSet[\"lib.es2019.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2019.object.d.ts\"] = true;\nlibFileSet[\"lib.es2019.string.d.ts\"] = true;\nlibFileSet[\"lib.es2019.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2020.bigint.d.ts\"] = true;\nlibFileSet[\"lib.es2020.d.ts\"] = true;\nlibFileSet[\"lib.es2020.date.d.ts\"] = true;\nlibFileSet[\"lib.es2020.full.d.ts\"] = true;\nlibFileSet[\"lib.es2020.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2020.number.d.ts\"] = true;\nlibFileSet[\"lib.es2020.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2020.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2020.string.d.ts\"] = true;\nlibFileSet[\"lib.es2020.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2021.d.ts\"] = true;\nlibFileSet[\"lib.es2021.full.d.ts\"] = true;\nlibFileSet[\"lib.es2021.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2021.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2021.string.d.ts\"] = true;\nlibFileSet[\"lib.es2021.weakref.d.ts\"] = true;\nlibFileSet[\"lib.es2022.array.d.ts\"] = true;\nlibFileSet[\"lib.es2022.d.ts\"] = true;\nlibFileSet[\"lib.es2022.error.d.ts\"] = true;\nlibFileSet[\"lib.es2022.full.d.ts\"] = true;\nlibFileSet[\"lib.es2022.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2022.object.d.ts\"] = true;\nlibFileSet[\"lib.es2022.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2022.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2022.string.d.ts\"] = true;\nlibFileSet[\"lib.es2023.array.d.ts\"] = true;\nlibFileSet[\"lib.es2023.d.ts\"] = true;\nlibFileSet[\"lib.es2023.full.d.ts\"] = true;\nlibFileSet[\"lib.es5.d.ts\"] = true;\nlibFileSet[\"lib.es6.d.ts\"] = true;\nlibFileSet[\"lib.esnext.d.ts\"] = true;\nlibFileSet[\"lib.esnext.full.d.ts\"] = true;\nlibFileSet[\"lib.esnext.intl.d.ts\"] = true;\nlibFileSet[\"lib.scripthost.d.ts\"] = true;\nlibFileSet[\"lib.webworker.d.ts\"] = true;\nlibFileSet[\"lib.webworker.importscripts.d.ts\"] = true;\nlibFileSet[\"lib.webworker.iterable.d.ts\"] = true;\n\n// src/language/typescript/languageFeatures.ts\nfunction flattenDiagnosticMessageText(diag, newLine, indent = 0) {\n  if (typeof diag === \"string\") {\n    return diag;\n  } else if (diag === void 0) {\n    return \"\";\n  }\n  let result = \"\";\n  if (indent) {\n    result += newLine;\n    for (let i = 0; i < indent; i++) {\n      result += \"  \";\n    }\n  }\n  result += diag.messageText;\n  indent++;\n  if (diag.next) {\n    for (const kid of diag.next) {\n      result += flattenDiagnosticMessageText(kid, newLine, indent);\n    }\n  }\n  return result;\n}\nfunction displayPartsToString(displayParts) {\n  if (displayParts) {\n    return displayParts.map((displayPart) => displayPart.text).join(\"\");\n  }\n  return \"\";\n}\nvar Adapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n  // protected _positionToOffset(model: editor.ITextModel, position: monaco.IPosition): number {\n  // \treturn model.getOffsetAt(position);\n  // }\n  // protected _offsetToPosition(model: editor.ITextModel, offset: number): monaco.IPosition {\n  // \treturn model.getPositionAt(offset);\n  // }\n  _textSpanToRange(model, span) {\n    let p1 = model.getPositionAt(span.start);\n    let p2 = model.getPositionAt(span.start + span.length);\n    let { lineNumber: startLineNumber, column: startColumn } = p1;\n    let { lineNumber: endLineNumber, column: endColumn } = p2;\n    return { startLineNumber, startColumn, endLineNumber, endColumn };\n  }\n};\nvar LibFiles = class {\n  constructor(_worker) {\n    this._worker = _worker;\n    this._libFiles = {};\n    this._hasFetchedLibFiles = false;\n    this._fetchLibFilesPromise = null;\n  }\n  isLibFile(uri) {\n    if (!uri) {\n      return false;\n    }\n    if (uri.path.indexOf(\"/lib.\") === 0) {\n      return !!libFileSet[uri.path.slice(1)];\n    }\n    return false;\n  }\n  getOrCreateModel(fileName) {\n    const uri = monaco_editor_core_exports.Uri.parse(fileName);\n    const model = monaco_editor_core_exports.editor.getModel(uri);\n    if (model) {\n      return model;\n    }\n    if (this.isLibFile(uri) && this._hasFetchedLibFiles) {\n      return monaco_editor_core_exports.editor.createModel(this._libFiles[uri.path.slice(1)], \"typescript\", uri);\n    }\n    const matchedLibFile = typescriptDefaults.getExtraLibs()[fileName];\n    if (matchedLibFile) {\n      return monaco_editor_core_exports.editor.createModel(matchedLibFile.content, \"typescript\", uri);\n    }\n    return null;\n  }\n  _containsLibFile(uris) {\n    for (let uri of uris) {\n      if (this.isLibFile(uri)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async fetchLibFilesIfNecessary(uris) {\n    if (!this._containsLibFile(uris)) {\n      return;\n    }\n    await this._fetchLibFiles();\n  }\n  _fetchLibFiles() {\n    if (!this._fetchLibFilesPromise) {\n      this._fetchLibFilesPromise = this._worker().then((w) => w.getLibFiles()).then((libFiles) => {\n        this._hasFetchedLibFiles = true;\n        this._libFiles = libFiles;\n      });\n    }\n    return this._fetchLibFilesPromise;\n  }\n};\nvar DiagnosticsAdapter = class extends Adapter {\n  constructor(_libFiles, _defaults, _selector, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n    this._defaults = _defaults;\n    this._selector = _selector;\n    this._disposables = [];\n    this._listener = /* @__PURE__ */ Object.create(null);\n    const onModelAdd = (model) => {\n      if (model.getLanguageId() !== _selector) {\n        return;\n      }\n      const maybeValidate = () => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            this._doValidate(model);\n          }\n        } else {\n          this._doValidate(model);\n        }\n      };\n      let handle;\n      const changeSubscription = model.onDidChangeContent(() => {\n        clearTimeout(handle);\n        handle = window.setTimeout(maybeValidate, 500);\n      });\n      const visibleSubscription = model.onDidChangeAttached(() => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            maybeValidate();\n          } else {\n            monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n          }\n        }\n      });\n      this._listener[model.uri.toString()] = {\n        dispose() {\n          changeSubscription.dispose();\n          visibleSubscription.dispose();\n          clearTimeout(handle);\n        }\n      };\n      maybeValidate();\n    };\n    const onModelRemoved = (model) => {\n      monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n      const key = model.uri.toString();\n      if (this._listener[key]) {\n        this._listener[key].dispose();\n        delete this._listener[key];\n      }\n    };\n    this._disposables.push(\n      monaco_editor_core_exports.editor.onDidCreateModel((model) => onModelAdd(model))\n    );\n    this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\n    this._disposables.push(\n      monaco_editor_core_exports.editor.onDidChangeModelLanguage((event) => {\n        onModelRemoved(event.model);\n        onModelAdd(event.model);\n      })\n    );\n    this._disposables.push({\n      dispose() {\n        for (const model of monaco_editor_core_exports.editor.getModels()) {\n          onModelRemoved(model);\n        }\n      }\n    });\n    const recomputeDiagostics = () => {\n      for (const model of monaco_editor_core_exports.editor.getModels()) {\n        onModelRemoved(model);\n        onModelAdd(model);\n      }\n    };\n    this._disposables.push(this._defaults.onDidChange(recomputeDiagostics));\n    this._disposables.push(this._defaults.onDidExtraLibsChange(recomputeDiagostics));\n    monaco_editor_core_exports.editor.getModels().forEach((model) => onModelAdd(model));\n  }\n  dispose() {\n    this._disposables.forEach((d) => d && d.dispose());\n    this._disposables = [];\n  }\n  async _doValidate(model) {\n    const worker = await this._worker(model.uri);\n    if (model.isDisposed()) {\n      return;\n    }\n    const promises = [];\n    const { noSyntaxValidation, noSemanticValidation, noSuggestionDiagnostics } = this._defaults.getDiagnosticsOptions();\n    if (!noSyntaxValidation) {\n      promises.push(worker.getSyntacticDiagnostics(model.uri.toString()));\n    }\n    if (!noSemanticValidation) {\n      promises.push(worker.getSemanticDiagnostics(model.uri.toString()));\n    }\n    if (!noSuggestionDiagnostics) {\n      promises.push(worker.getSuggestionDiagnostics(model.uri.toString()));\n    }\n    const allDiagnostics = await Promise.all(promises);\n    if (!allDiagnostics || model.isDisposed()) {\n      return;\n    }\n    const diagnostics = allDiagnostics.reduce((p, c) => c.concat(p), []).filter(\n      (d) => (this._defaults.getDiagnosticsOptions().diagnosticCodesToIgnore || []).indexOf(d.code) === -1\n    );\n    const relatedUris = diagnostics.map((d) => d.relatedInformation || []).reduce((p, c) => c.concat(p), []).map(\n      (relatedInformation) => relatedInformation.file ? monaco_editor_core_exports.Uri.parse(relatedInformation.file.fileName) : null\n    );\n    await this._libFiles.fetchLibFilesIfNecessary(relatedUris);\n    if (model.isDisposed()) {\n      return;\n    }\n    monaco_editor_core_exports.editor.setModelMarkers(\n      model,\n      this._selector,\n      diagnostics.map((d) => this._convertDiagnostics(model, d))\n    );\n  }\n  _convertDiagnostics(model, diag) {\n    const diagStart = diag.start || 0;\n    const diagLength = diag.length || 1;\n    const { lineNumber: startLineNumber, column: startColumn } = model.getPositionAt(diagStart);\n    const { lineNumber: endLineNumber, column: endColumn } = model.getPositionAt(\n      diagStart + diagLength\n    );\n    const tags = [];\n    if (diag.reportsUnnecessary) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Unnecessary);\n    }\n    if (diag.reportsDeprecated) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Deprecated);\n    }\n    return {\n      severity: this._tsDiagnosticCategoryToMarkerSeverity(diag.category),\n      startLineNumber,\n      startColumn,\n      endLineNumber,\n      endColumn,\n      message: flattenDiagnosticMessageText(diag.messageText, \"\\n\"),\n      code: diag.code.toString(),\n      tags,\n      relatedInformation: this._convertRelatedInformation(model, diag.relatedInformation)\n    };\n  }\n  _convertRelatedInformation(model, relatedInformation) {\n    if (!relatedInformation) {\n      return [];\n    }\n    const result = [];\n    relatedInformation.forEach((info) => {\n      let relatedResource = model;\n      if (info.file) {\n        relatedResource = this._libFiles.getOrCreateModel(info.file.fileName);\n      }\n      if (!relatedResource) {\n        return;\n      }\n      const infoStart = info.start || 0;\n      const infoLength = info.length || 1;\n      const { lineNumber: startLineNumber, column: startColumn } = relatedResource.getPositionAt(infoStart);\n      const { lineNumber: endLineNumber, column: endColumn } = relatedResource.getPositionAt(\n        infoStart + infoLength\n      );\n      result.push({\n        resource: relatedResource.uri,\n        startLineNumber,\n        startColumn,\n        endLineNumber,\n        endColumn,\n        message: flattenDiagnosticMessageText(info.messageText, \"\\n\")\n      });\n    });\n    return result;\n  }\n  _tsDiagnosticCategoryToMarkerSeverity(category) {\n    switch (category) {\n      case 1 /* Error */:\n        return monaco_editor_core_exports.MarkerSeverity.Error;\n      case 3 /* Message */:\n        return monaco_editor_core_exports.MarkerSeverity.Info;\n      case 0 /* Warning */:\n        return monaco_editor_core_exports.MarkerSeverity.Warning;\n      case 2 /* Suggestion */:\n        return monaco_editor_core_exports.MarkerSeverity.Hint;\n    }\n    return monaco_editor_core_exports.MarkerSeverity.Info;\n  }\n};\nvar SuggestAdapter = class _SuggestAdapter extends Adapter {\n  get triggerCharacters() {\n    return [\".\"];\n  }\n  async provideCompletionItems(model, position, _context, token) {\n    const wordInfo = model.getWordUntilPosition(position);\n    const wordRange = new monaco_editor_core_exports.Range(\n      position.lineNumber,\n      wordInfo.startColumn,\n      position.lineNumber,\n      wordInfo.endColumn\n    );\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getCompletionsAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const suggestions = info.entries.map((entry) => {\n      let range = wordRange;\n      if (entry.replacementSpan) {\n        const p1 = model.getPositionAt(entry.replacementSpan.start);\n        const p2 = model.getPositionAt(entry.replacementSpan.start + entry.replacementSpan.length);\n        range = new monaco_editor_core_exports.Range(p1.lineNumber, p1.column, p2.lineNumber, p2.column);\n      }\n      const tags = [];\n      if (entry.kindModifiers !== void 0 && entry.kindModifiers.indexOf(\"deprecated\") !== -1) {\n        tags.push(monaco_editor_core_exports.languages.CompletionItemTag.Deprecated);\n      }\n      return {\n        uri: resource,\n        position,\n        offset,\n        range,\n        label: entry.name,\n        insertText: entry.name,\n        sortText: entry.sortText,\n        kind: _SuggestAdapter.convertKind(entry.kind),\n        tags\n      };\n    });\n    return {\n      suggestions\n    };\n  }\n  async resolveCompletionItem(item, token) {\n    const myItem = item;\n    const resource = myItem.uri;\n    const position = myItem.position;\n    const offset = myItem.offset;\n    const worker = await this._worker(resource);\n    const details = await worker.getCompletionEntryDetails(\n      resource.toString(),\n      offset,\n      myItem.label\n    );\n    if (!details) {\n      return myItem;\n    }\n    return {\n      uri: resource,\n      position,\n      label: details.name,\n      kind: _SuggestAdapter.convertKind(details.kind),\n      detail: displayPartsToString(details.displayParts),\n      documentation: {\n        value: _SuggestAdapter.createDocumentationString(details)\n      }\n    };\n  }\n  static convertKind(kind) {\n    switch (kind) {\n      case Kind.primitiveType:\n      case Kind.keyword:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Keyword;\n      case Kind.variable:\n      case Kind.localVariable:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Variable;\n      case Kind.memberVariable:\n      case Kind.memberGetAccessor:\n      case Kind.memberSetAccessor:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Field;\n      case Kind.function:\n      case Kind.memberFunction:\n      case Kind.constructSignature:\n      case Kind.callSignature:\n      case Kind.indexSignature:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Function;\n      case Kind.enum:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Enum;\n      case Kind.module:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Module;\n      case Kind.class:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Class;\n      case Kind.interface:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Interface;\n      case Kind.warning:\n        return monaco_editor_core_exports.languages.CompletionItemKind.File;\n    }\n    return monaco_editor_core_exports.languages.CompletionItemKind.Property;\n  }\n  static createDocumentationString(details) {\n    let documentationString = displayPartsToString(details.documentation);\n    if (details.tags) {\n      for (const tag of details.tags) {\n        documentationString += `\n\n${tagToString(tag)}`;\n      }\n    }\n    return documentationString;\n  }\n};\nfunction tagToString(tag) {\n  let tagLabel = `*@${tag.name}*`;\n  if (tag.name === \"param\" && tag.text) {\n    const [paramName, ...rest] = tag.text;\n    tagLabel += `\\`${paramName.text}\\``;\n    if (rest.length > 0)\n      tagLabel += ` \\u2014 ${rest.map((r) => r.text).join(\" \")}`;\n  } else if (Array.isArray(tag.text)) {\n    tagLabel += ` \\u2014 ${tag.text.map((r) => r.text).join(\" \")}`;\n  } else if (tag.text) {\n    tagLabel += ` \\u2014 ${tag.text}`;\n  }\n  return tagLabel;\n}\nvar SignatureHelpAdapter = class _SignatureHelpAdapter extends Adapter {\n  constructor() {\n    super(...arguments);\n    this.signatureHelpTriggerCharacters = [\"(\", \",\"];\n  }\n  static _toSignatureHelpTriggerReason(context) {\n    switch (context.triggerKind) {\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.TriggerCharacter:\n        if (context.triggerCharacter) {\n          if (context.isRetrigger) {\n            return { kind: \"retrigger\", triggerCharacter: context.triggerCharacter };\n          } else {\n            return { kind: \"characterTyped\", triggerCharacter: context.triggerCharacter };\n          }\n        } else {\n          return { kind: \"invoked\" };\n        }\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.ContentChange:\n        return context.isRetrigger ? { kind: \"retrigger\" } : { kind: \"invoked\" };\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.Invoke:\n      default:\n        return { kind: \"invoked\" };\n    }\n  }\n  async provideSignatureHelp(model, position, token, context) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getSignatureHelpItems(resource.toString(), offset, {\n      triggerReason: _SignatureHelpAdapter._toSignatureHelpTriggerReason(context)\n    });\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const ret = {\n      activeSignature: info.selectedItemIndex,\n      activeParameter: info.argumentIndex,\n      signatures: []\n    };\n    info.items.forEach((item) => {\n      const signature = {\n        label: \"\",\n        parameters: []\n      };\n      signature.documentation = {\n        value: displayPartsToString(item.documentation)\n      };\n      signature.label += displayPartsToString(item.prefixDisplayParts);\n      item.parameters.forEach((p, i, a) => {\n        const label = displayPartsToString(p.displayParts);\n        const parameter = {\n          label,\n          documentation: {\n            value: displayPartsToString(p.documentation)\n          }\n        };\n        signature.label += label;\n        signature.parameters.push(parameter);\n        if (i < a.length - 1) {\n          signature.label += displayPartsToString(item.separatorDisplayParts);\n        }\n      });\n      signature.label += displayPartsToString(item.suffixDisplayParts);\n      ret.signatures.push(signature);\n    });\n    return {\n      value: ret,\n      dispose() {\n      }\n    };\n  }\n};\nvar QuickInfoAdapter = class extends Adapter {\n  async provideHover(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getQuickInfoAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const documentation = displayPartsToString(info.documentation);\n    const tags = info.tags ? info.tags.map((tag) => tagToString(tag)).join(\"  \\n\\n\") : \"\";\n    const contents = displayPartsToString(info.displayParts);\n    return {\n      range: this._textSpanToRange(model, info.textSpan),\n      contents: [\n        {\n          value: \"```typescript\\n\" + contents + \"\\n```\\n\"\n        },\n        {\n          value: documentation + (tags ? \"\\n\\n\" + tags : \"\")\n        }\n      ]\n    };\n  }\n};\nvar DocumentHighlightAdapter = class extends Adapter {\n  async provideDocumentHighlights(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDocumentHighlights(resource.toString(), offset, [\n      resource.toString()\n    ]);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    return entries.flatMap((entry) => {\n      return entry.highlightSpans.map((highlightSpans) => {\n        return {\n          range: this._textSpanToRange(model, highlightSpans.textSpan),\n          kind: highlightSpans.kind === \"writtenReference\" ? monaco_editor_core_exports.languages.DocumentHighlightKind.Write : monaco_editor_core_exports.languages.DocumentHighlightKind.Text\n        };\n      });\n    });\n  }\n};\nvar DefinitionAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideDefinition(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDefinitionAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(\n      entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName))\n    );\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar ReferenceAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideReferences(model, position, context, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getReferencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(\n      entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName))\n    );\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar OutlineAdapter = class extends Adapter {\n  async provideDocumentSymbols(model, token) {\n    const resource = model.uri;\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const root = await worker.getNavigationTree(resource.toString());\n    if (!root || model.isDisposed()) {\n      return;\n    }\n    const convert = (item, containerLabel) => {\n      const result2 = {\n        name: item.text,\n        detail: \"\",\n        kind: outlineTypeTable[item.kind] || monaco_editor_core_exports.languages.SymbolKind.Variable,\n        range: this._textSpanToRange(model, item.spans[0]),\n        selectionRange: this._textSpanToRange(model, item.spans[0]),\n        tags: [],\n        children: item.childItems?.map((child) => convert(child, item.text)),\n        containerName: containerLabel\n      };\n      return result2;\n    };\n    const result = root.childItems ? root.childItems.map((item) => convert(item)) : [];\n    return result;\n  }\n};\nvar Kind = class {\n  static {\n    this.unknown = \"\";\n  }\n  static {\n    this.keyword = \"keyword\";\n  }\n  static {\n    this.script = \"script\";\n  }\n  static {\n    this.module = \"module\";\n  }\n  static {\n    this.class = \"class\";\n  }\n  static {\n    this.interface = \"interface\";\n  }\n  static {\n    this.type = \"type\";\n  }\n  static {\n    this.enum = \"enum\";\n  }\n  static {\n    this.variable = \"var\";\n  }\n  static {\n    this.localVariable = \"local var\";\n  }\n  static {\n    this.function = \"function\";\n  }\n  static {\n    this.localFunction = \"local function\";\n  }\n  static {\n    this.memberFunction = \"method\";\n  }\n  static {\n    this.memberGetAccessor = \"getter\";\n  }\n  static {\n    this.memberSetAccessor = \"setter\";\n  }\n  static {\n    this.memberVariable = \"property\";\n  }\n  static {\n    this.constructorImplementation = \"constructor\";\n  }\n  static {\n    this.callSignature = \"call\";\n  }\n  static {\n    this.indexSignature = \"index\";\n  }\n  static {\n    this.constructSignature = \"construct\";\n  }\n  static {\n    this.parameter = \"parameter\";\n  }\n  static {\n    this.typeParameter = \"type parameter\";\n  }\n  static {\n    this.primitiveType = \"primitive type\";\n  }\n  static {\n    this.label = \"label\";\n  }\n  static {\n    this.alias = \"alias\";\n  }\n  static {\n    this.const = \"const\";\n  }\n  static {\n    this.let = \"let\";\n  }\n  static {\n    this.warning = \"warning\";\n  }\n};\nvar outlineTypeTable = /* @__PURE__ */ Object.create(null);\noutlineTypeTable[Kind.module] = monaco_editor_core_exports.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco_editor_core_exports.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco_editor_core_exports.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco_editor_core_exports.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco_editor_core_exports.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco_editor_core_exports.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco_editor_core_exports.languages.SymbolKind.Function;\nvar FormatHelper = class extends Adapter {\n  static _convertOptions(options) {\n    return {\n      ConvertTabsToSpaces: options.insertSpaces,\n      TabSize: options.tabSize,\n      IndentSize: options.tabSize,\n      IndentStyle: 2 /* Smart */,\n      NewLineCharacter: \"\\n\",\n      InsertSpaceAfterCommaDelimiter: true,\n      InsertSpaceAfterSemicolonInForStatements: true,\n      InsertSpaceBeforeAndAfterBinaryOperators: true,\n      InsertSpaceAfterKeywordsInControlFlowStatements: true,\n      InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n      InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n      PlaceOpenBraceOnNewLineForControlBlocks: false,\n      PlaceOpenBraceOnNewLineForFunctions: false\n    };\n  }\n  _convertTextChanges(model, change) {\n    return {\n      text: change.newText,\n      range: this._textSpanToRange(model, change.span)\n    };\n  }\n};\nvar FormatAdapter = class extends FormatHelper {\n  constructor() {\n    super(...arguments);\n    this.canFormatMultipleRanges = false;\n  }\n  async provideDocumentRangeFormattingEdits(model, range, options, token) {\n    const resource = model.uri;\n    const startOffset = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const endOffset = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsForRange(\n      resource.toString(),\n      startOffset,\n      endOffset,\n      FormatHelper._convertOptions(options)\n    );\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar FormatOnTypeAdapter = class extends FormatHelper {\n  get autoFormatTriggerCharacters() {\n    return [\";\", \"}\", \"\\n\"];\n  }\n  async provideOnTypeFormattingEdits(model, position, ch, options, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsAfterKeystroke(\n      resource.toString(),\n      offset,\n      ch,\n      FormatHelper._convertOptions(options)\n    );\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar CodeActionAdaptor = class extends FormatHelper {\n  async provideCodeActions(model, range, context, token) {\n    const resource = model.uri;\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const formatOptions = FormatHelper._convertOptions(model.getOptions());\n    const errorCodes = context.markers.filter((m) => m.code).map((m) => m.code).map(Number);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const codeFixes = await worker.getCodeFixesAtPosition(\n      resource.toString(),\n      start,\n      end,\n      errorCodes,\n      formatOptions\n    );\n    if (!codeFixes || model.isDisposed()) {\n      return { actions: [], dispose: () => {\n      } };\n    }\n    const actions = codeFixes.filter((fix) => {\n      return fix.changes.filter((change) => change.isNewFile).length === 0;\n    }).map((fix) => {\n      return this._tsCodeFixActionToMonacoCodeAction(model, context, fix);\n    });\n    return {\n      actions,\n      dispose: () => {\n      }\n    };\n  }\n  _tsCodeFixActionToMonacoCodeAction(model, context, codeFix) {\n    const edits = [];\n    for (const change of codeFix.changes) {\n      for (const textChange of change.textChanges) {\n        edits.push({\n          resource: model.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model, textChange.span),\n            text: textChange.newText\n          }\n        });\n      }\n    }\n    const action = {\n      title: codeFix.description,\n      edit: { edits },\n      diagnostics: context.markers,\n      kind: \"quickfix\"\n    };\n    return action;\n  }\n};\nvar RenameAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideRenameEdits(model, position, newName, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const renameInfo = await worker.getRenameInfo(fileName, offset, {\n      allowRenameOfImportPath: false\n    });\n    if (renameInfo.canRename === false) {\n      return {\n        edits: [],\n        rejectReason: renameInfo.localizedErrorMessage\n      };\n    }\n    if (renameInfo.fileToRename !== void 0) {\n      throw new Error(\"Renaming files is not supported.\");\n    }\n    const renameLocations = await worker.findRenameLocations(\n      fileName,\n      offset,\n      /*strings*/\n      false,\n      /*comments*/\n      false,\n      /*prefixAndSuffix*/\n      false\n    );\n    if (!renameLocations || model.isDisposed()) {\n      return;\n    }\n    const edits = [];\n    for (const renameLocation of renameLocations) {\n      const model2 = this._libFiles.getOrCreateModel(renameLocation.fileName);\n      if (model2) {\n        edits.push({\n          resource: model2.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model2, renameLocation.textSpan),\n            text: newName\n          }\n        });\n      } else {\n        throw new Error(`Unknown file ${renameLocation.fileName}.`);\n      }\n    }\n    return { edits };\n  }\n};\nvar InlayHintsAdapter = class extends Adapter {\n  async provideInlayHints(model, range, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return null;\n    }\n    const tsHints = await worker.provideInlayHints(fileName, start, end);\n    const hints = tsHints.map((hint) => {\n      return {\n        ...hint,\n        label: hint.text,\n        position: model.getPositionAt(hint.position),\n        kind: this._convertHintKind(hint.kind)\n      };\n    });\n    return { hints, dispose: () => {\n    } };\n  }\n  _convertHintKind(kind) {\n    switch (kind) {\n      case \"Parameter\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Parameter;\n      case \"Type\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n      default:\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n    }\n  }\n};\n\n// src/language/typescript/tsMode.ts\nvar javaScriptWorker;\nvar typeScriptWorker;\nfunction setupTypeScript(defaults) {\n  typeScriptWorker = setupMode(defaults, \"typescript\");\n}\nfunction setupJavaScript(defaults) {\n  javaScriptWorker = setupMode(defaults, \"javascript\");\n}\nfunction getJavaScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!javaScriptWorker) {\n      return reject(\"JavaScript not registered!\");\n    }\n    resolve(javaScriptWorker);\n  });\n}\nfunction getTypeScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!typeScriptWorker) {\n      return reject(\"TypeScript not registered!\");\n    }\n    resolve(typeScriptWorker);\n  });\n}\nfunction setupMode(defaults, modeId) {\n  const disposables = [];\n  const providers = [];\n  const client = new WorkerManager(modeId, defaults);\n  disposables.push(client);\n  const worker = (...uris) => {\n    return client.getLanguageServiceWorker(...uris);\n  };\n  const libFiles = new LibFiles(worker);\n  function registerProviders() {\n    const { modeConfiguration } = defaults;\n    disposeAll(providers);\n    if (modeConfiguration.completionItems) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerCompletionItemProvider(\n          modeId,\n          new SuggestAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.signatureHelp) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerSignatureHelpProvider(\n          modeId,\n          new SignatureHelpAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.hovers) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerHoverProvider(modeId, new QuickInfoAdapter(worker))\n      );\n    }\n    if (modeConfiguration.documentHighlights) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDocumentHighlightProvider(\n          modeId,\n          new DocumentHighlightAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.definitions) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDefinitionProvider(\n          modeId,\n          new DefinitionAdapter(libFiles, worker)\n        )\n      );\n    }\n    if (modeConfiguration.references) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerReferenceProvider(\n          modeId,\n          new ReferenceAdapter(libFiles, worker)\n        )\n      );\n    }\n    if (modeConfiguration.documentSymbols) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDocumentSymbolProvider(\n          modeId,\n          new OutlineAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.rename) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerRenameProvider(\n          modeId,\n          new RenameAdapter(libFiles, worker)\n        )\n      );\n    }\n    if (modeConfiguration.documentRangeFormattingEdits) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(\n          modeId,\n          new FormatAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.onTypeFormattingEdits) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerOnTypeFormattingEditProvider(\n          modeId,\n          new FormatOnTypeAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.codeActions) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerCodeActionProvider(modeId, new CodeActionAdaptor(worker))\n      );\n    }\n    if (modeConfiguration.inlayHints) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerInlayHintsProvider(modeId, new InlayHintsAdapter(worker))\n      );\n    }\n    if (modeConfiguration.diagnostics) {\n      providers.push(new DiagnosticsAdapter(libFiles, defaults, modeId, worker));\n    }\n  }\n  registerProviders();\n  disposables.push(asDisposable(providers));\n  return worker;\n}\nfunction asDisposable(disposables) {\n  return { dispose: () => disposeAll(disposables) };\n}\nfunction disposeAll(disposables) {\n  while (disposables.length) {\n    disposables.pop().dispose();\n  }\n}\nexport {\n  Adapter,\n  CodeActionAdaptor,\n  DefinitionAdapter,\n  DiagnosticsAdapter,\n  DocumentHighlightAdapter,\n  FormatAdapter,\n  FormatHelper,\n  FormatOnTypeAdapter,\n  InlayHintsAdapter,\n  Kind,\n  LibFiles,\n  OutlineAdapter,\n  QuickInfoAdapter,\n  ReferenceAdapter,\n  RenameAdapter,\n  SignatureHelpAdapter,\n  SuggestAdapter,\n  WorkerManager,\n  flattenDiagnosticMessageText,\n  getJavaScriptWorker,\n  getTypeScriptWorker,\n  setupJavaScript,\n  setupTypeScript\n};\n"],"x_google_ignoreList":[0]}